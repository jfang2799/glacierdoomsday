{"ast":null,"code":"import React, { Component } from \"react\";\nimport Coin from \"./coin\";\nexport default class Coindashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBackEndData = async () => {\n      const response = await fetch('/on_start');\n      const body = await response.json();\n\n      if (response.status != 200) {\n        throw Error(body.message);\n      }\n\n      console.log(body);\n      return body;\n    };\n\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadBackEndData().then(res => this.setState({\n      items: res.express,\n      DataisLoaded: true\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    let all_coins;\n\n    for (let item in this.state.items) {\n      let crypto = Coin(this.state.items[item].name);\n      crypto.setState(this.state.items[item]);\n      all_coins += crypto.render();\n    }\n\n    return this.state.items;\n    return all_coins;\n    return null;\n  }\n\n}","map":{"version":3,"sources":["/Users/jeffreyfang/Documents/minerstats/src/loadcoin.js"],"names":["React","Component","Coin","Coindashboard","constructor","props","loadBackEndData","response","fetch","body","json","status","Error","message","console","log","state","items","DataisLoaded","componentDidMount","then","res","setState","express","catch","err","render","all_coins","item","crypto","name"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACC,SAAlC,CAA4C;AACvDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAiBlBC,eAjBkB,GAiBA,YAAW;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,IAAmB,GAAvB,EAA2B;AACvB,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACH;;AAEDC,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAEA,aAAOA,IAAP;AACH,KA5BiB;;AAGd,SAAKO,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,eAAL,GACKc,IADL,CACUC,GAAG,IAAG,KAAKC,QAAL,CAAc;AACtBL,MAAAA,KAAK,EAAEI,GAAG,CAACE,OADW;AAEtBL,MAAAA,YAAY,EAAE;AAFQ,KAAd,CADhB,EAKKM,KALL,CAKWC,GAAG,IAAIX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CALlB;AAMH;;AAeDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,SAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiB,KAAKZ,KAAL,CAAWC,KAA5B,EAAkC;AAC9B,UAAIY,MAAM,GAAG3B,IAAI,CAAC,KAAKc,KAAL,CAAWC,KAAX,CAAiBW,IAAjB,EAAuBE,IAAxB,CAAjB;AACAD,MAAAA,MAAM,CAACP,QAAP,CAAgB,KAAKN,KAAL,CAAWC,KAAX,CAAiBW,IAAjB,CAAhB;AACAD,MAAAA,SAAS,IAAIE,MAAM,CAACH,MAAP,EAAb;AACH;;AAED,WAAO,KAAKV,KAAL,CAAWC,KAAlB;AAEA,WAAOU,SAAP;AAEA,WAAO,IAAP;AACH;;AA5CsD","sourcesContent":["import React, { Component } from \"react\";\nimport Coin from \"./coin\";\n\nexport default class Coindashboard extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            items: [],\n            DataisLoaded: false\n        }\n    }\n    componentDidMount() {\n        this.loadBackEndData()\n            .then(res=> this.setState({ \n                items: res.express,\n                DataisLoaded: true\n            }))\n            .catch(err => console.log(err));\n    }\n\n    loadBackEndData = async() => {\n        const response = await fetch('/on_start');\n        const body = await response.json();\n\n        if (response.status != 200){\n            throw Error(body.message);\n        }\n\n        console.log(body);\n        \n        return body;\n    }\n\n    render(){\n        let all_coins;\n        for (let item in this.state.items){\n            let crypto = Coin(this.state.items[item].name);\n            crypto.setState(this.state.items[item]);\n            all_coins += crypto.render();\n        }\n\n        return this.state.items; \n\n        return all_coins;\n\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}