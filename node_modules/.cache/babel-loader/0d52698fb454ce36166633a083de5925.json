{"ast":null,"code":"import React, { Component } from \"react\";\nimport Coin from \"./coin\";\nexport default class Coindashboard extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBackEndData = async () => {\n      const response = await fetch('/on_start');\n      const body = await response.json();\n\n      if (response.status != 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    this.loadBackEndData().tjhen(res => res.json()).then(json => this.setState({\n      items: json,\n      DataisLoaded: true\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    let all_coins;\n\n    for (let item in this.state.items) {\n      let crypto = Coin(this.state.items[item].name);\n      crypto.setState(this.state.items[item]);\n      all_coins += crypto.render();\n    }\n\n    return all_coins;\n    return null;\n  }\n\n}","map":{"version":3,"sources":["/Users/jeffreyfang/Documents/minerstats/src/loadcoin.js"],"names":["React","Component","Coin","Coindashboard","constructor","props","loadBackEndData","response","fetch","body","json","status","Error","message","state","items","DataisLoaded","componentDidMount","tjhen","res","then","setState","catch","err","console","log","render","all_coins","item","crypto","name"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,eAAe,MAAMC,aAAN,SAA4BH,KAAK,CAACC,SAAlC,CAA4C;AACvDG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmBlBC,eAnBkB,GAmBA,YAAW;AACzB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,UAAIH,QAAQ,CAACI,MAAT,IAAmB,GAAvB,EAA2B;AACvB,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACH;;AAED,aAAOJ,IAAP;AACH,KA5BiB;;AAGd,SAAKK,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,eAAL,GACKY,KADL,CACYC,GAAD,IAASA,GAAG,CAACT,IAAJ,EADpB,EAEKU,IAFL,CAEUV,IAAI,IACN,KAAKW,QAAL,CAAc;AACdN,MAAAA,KAAK,EAAEL,IADO;AAEdM,MAAAA,YAAY,EAAE;AAFA,KAAd,CAHR,EAOKM,KAPL,CAOWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPlB;AAQH;;AAaDG,EAAAA,MAAM,GAAE;AACJ,QAAIC,SAAJ;;AACA,SAAK,IAAIC,IAAT,IAAiB,KAAKd,KAAL,CAAWC,KAA5B,EAAkC;AAC9B,UAAIc,MAAM,GAAG3B,IAAI,CAAC,KAAKY,KAAL,CAAWC,KAAX,CAAiBa,IAAjB,EAAuBE,IAAxB,CAAjB;AACAD,MAAAA,MAAM,CAACR,QAAP,CAAgB,KAAKP,KAAL,CAAWC,KAAX,CAAiBa,IAAjB,CAAhB;AACAD,MAAAA,SAAS,IAAIE,MAAM,CAACH,MAAP,EAAb;AACH;;AAED,WAAOC,SAAP;AAEA,WAAO,IAAP;AACH;;AA1CsD","sourcesContent":["import React, { Component } from \"react\";\nimport Coin from \"./coin\";\n\nexport default class Coindashboard extends React.Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            items: [],\n            DataisLoaded: false\n        }\n    }\n    componentDidMount() {\n        this.loadBackEndData()\n            .tjhen((res) => res.json())\n            .then(json=> \n                this.setState({ \n                items: json,\n                DataisLoaded: true\n            }))\n            .catch(err => console.log(err));\n    }\n\n    loadBackEndData = async() => {\n        const response = await fetch('/on_start');\n        const body = await response.json();\n\n        if (response.status != 200){\n            throw Error(body.message);\n        }\n        \n        return body;\n    }\n\n    render(){\n        let all_coins;\n        for (let item in this.state.items){\n            let crypto = Coin(this.state.items[item].name);\n            crypto.setState(this.state.items[item]);\n            all_coins += crypto.render();\n        }\n\n        return all_coins;\n\n        return null;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}